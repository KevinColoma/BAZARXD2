openapi: 3.0.3
info:
  title: KiroGlam API
  description: |
    API REST para el sistema de gestión de bazar KiroGlam.
    
    ## Características
    - Autenticación OAuth 2.0 con Google
    - CRUD completo para productos
    - Gestión de inventario y ventas
    - Sesiones seguras
    
    ## Autenticación
    La API utiliza sesiones basadas en cookies después de la autenticación OAuth con Google.
    
  version: 1.0.0
  contact:
    name: KiroGlam Support
    url: https://github.com/KevinColoma/BAZARXD2
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://bazarxd.onrender.com
    description: Servidor de producción
  - url: http://localhost:4000
    description: Servidor de desarrollo

paths:
  # =================== AUTENTICACIÓN ===================
  /auth/google:
    get:
      tags:
        - Autenticación
      summary: Iniciar autenticación OAuth con Google
      description: Redirige al usuario a Google para autenticación OAuth 2.0
      responses:
        '302':
          description: Redirección a Google OAuth
          headers:
            Location:
              schema:
                type: string
                example: https://accounts.google.com/oauth/authorize...

  /auth/google/callback:
    get:
      tags:
        - Autenticación
      summary: Callback de Google OAuth
      description: Endpoint que recibe la respuesta de Google OAuth
      parameters:
        - name: code
          in: query
          required: true
          description: Código de autorización de Google
          schema:
            type: string
        - name: state
          in: query
          required: false
          description: Parámetro de estado para CSRF
          schema:
            type: string
      responses:
        '302':
          description: Redirección exitosa al menú principal
          headers:
            Location:
              schema:
                type: string
                example: /menu.html
        '401':
          description: Error de autenticación
          content:
            text/html:
              schema:
                type: string

  /auth/user:
    get:
      tags:
        - Autenticación
      summary: Verificar estado de autenticación
      description: Retorna información del usuario autenticado actual
      responses:
        '200':
          description: Usuario autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  user:
                    $ref: '#/components/schemas/User'
                  nodeEnv:
                    type: string
                    example: production
                  sessionID:
                    type: string
                    example: abc123...
        '401':
          description: Usuario no autenticado
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: No autenticado
                  details:
                    type: object
                    properties:
                      hasSession:
                        type: boolean
                      sessionID:
                        type: string
                      isAuthenticated:
                        type: boolean
                      hasUser:
                        type: boolean

  /auth/logout:
    post:
      tags:
        - Autenticación
      summary: Cerrar sesión
      description: Cierra la sesión del usuario actual
      responses:
        '200':
          description: Sesión cerrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Sesión cerrada
        '500':
          description: Error al cerrar sesión
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Error al cerrar sesión

  /auth/debug:
    get:
      tags:
        - Autenticación
      summary: Información de debug del sistema
      description: Información técnica para debugging (solo desarrollo)
      responses:
        '200':
          description: Información del sistema
          content:
            application/json:
              schema:
                type: object
                properties:
                  environment:
                    type: string
                    example: production
                  hasClientId:
                    type: boolean
                  hasClientSecret:
                    type: boolean
                  callbackURL:
                    type: string
                    example: https://bazarxd.onrender.com/auth/google/callback
                  sessionConfig:
                    type: object
                  currentSession:
                    type: object

  # =================== GESTIÓN DE PRODUCTOS ===================
  /api/carteras:
    get:
      tags:
        - Productos
      summary: Listar todos los productos
      description: Obtiene la lista completa de productos del inventario
      security:
        - sessionAuth: []
      responses:
        '200':
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Producto'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      tags:
        - Productos
      summary: Crear nuevo producto
      description: Agrega un nuevo producto al inventario
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoInput'
      responses:
        '201':
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carteras/{id}:
    get:
      tags:
        - Productos
      summary: Obtener producto por ID
      description: Obtiene los detalles de un producto específico
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID único del producto
          schema:
            type: string
            example: 64a1b2c3d4e5f6789abcdef0
      responses:
        '200':
          description: Detalles del producto
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      tags:
        - Productos
      summary: Actualizar producto
      description: Actualiza los datos de un producto existente
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID único del producto
          schema:
            type: string
            example: 64a1b2c3d4e5f6789abcdef0
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductoInput'
      responses:
        '200':
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Producto'
        '400':
          description: Datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    delete:
      tags:
        - Productos
      summary: Eliminar producto
      description: Elimina un producto del inventario
      security:
        - sessionAuth: []
      parameters:
        - name: id
          in: path
          required: true
          description: ID único del producto
          schema:
            type: string
            example: 64a1b2c3d4e5f6789abcdef0
      responses:
        '200':
          description: Producto eliminado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Producto eliminado exitosamente
        '404':
          description: Producto no encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /api/carteras/descontar-stock:
    post:
      tags:
        - Productos
      summary: Descontar stock por venta
      description: Reduce el stock de productos cuando se realiza una venta
      security:
        - sessionAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productos:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID del producto
                        example: 64a1b2c3d4e5f6789abcdef0
                      cantidad:
                        type: integer
                        minimum: 1
                        description: Cantidad vendida
                        example: 2
              required:
                - productos
      responses:
        '200':
          description: Stock actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Stock actualizado exitosamente
                  productosActualizados:
                    type: array
                    items:
                      $ref: '#/components/schemas/Producto'
        '400':
          description: Stock insuficiente o datos inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: No autenticado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # =================== ADMINISTRACIÓN ===================
  /api/admin/login:
    post:
      tags:
        - Administración
      summary: Login tradicional (legacy)
      description: Sistema de login tradicional (obsoleto, usar OAuth)
      deprecated: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: admin@kiroglam.com
                password:
                  type: string
                  format: password
                  example: password123
              required:
                - email
                - password
      responses:
        '200':
          description: Login exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: jwt_token_here
                  user:
                    $ref: '#/components/schemas/Admin'
        '401':
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  # =================== SALUD DEL SISTEMA ===================
  /health:
    get:
      tags:
        - Sistema
      summary: Estado de salud del servidor
      description: Endpoint para verificar que el servidor está funcionando
      responses:
        '200':
          description: Servidor funcionando correctamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: OK
                  message:
                    type: string
                    example: Servidor KiroGlam funcionando correctamente
                  timestamp:
                    type: string
                    format: date-time
                    example: 2025-08-04T12:00:00.000Z

components:
  securitySchemes:
    sessionAuth:
      type: apiKey
      in: cookie
      name: kiroglam.sid
      description: Autenticación basada en sesiones OAuth

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          description: ID único del usuario de Google
          example: "108169624057227550122"
        name:
          type: string
          description: Nombre completo del usuario
          example: "KevinC Blad"
        email:
          type: string
          format: email
          description: Email del usuario
          example: "kcoloma89@gmail.com"
        photo:
          type: string
          format: uri
          description: URL de la foto de perfil
          example: "https://lh3.googleusercontent.com/a/..."
        provider:
          type: string
          description: Proveedor de autenticación
          example: "google"
        accessToken:
          type: string
          description: Token de acceso de Google (para API calls)

    Producto:
      type: object
      properties:
        _id:
          type: string
          description: ID único del producto
          example: "64a1b2c3d4e5f6789abcdef0"
        descripcion:
          type: string
          description: Descripción del producto
          example: "Cartera de cuero roja"
        precio:
          type: number
          format: float
          minimum: 0
          description: Precio del producto
          example: 29.99
        stock:
          type: integer
          minimum: 0
          description: Cantidad en inventario
          example: 15
        imagen:
          type: string
          format: uri
          description: URL de la imagen del producto
          example: "https://example.com/images/cartera.jpg"
        categoria:
          type: string
          description: Categoría del producto
          example: "Accesorios"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2025-08-04T12:00:00.000Z"
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización
          example: "2025-08-04T12:00:00.000Z"
      required:
        - descripcion
        - precio
        - stock
        - imagen

    ProductoInput:
      type: object
      properties:
        descripcion:
          type: string
          description: Descripción del producto
          example: "Cartera de cuero roja"
          minLength: 1
          maxLength: 200
        precio:
          type: number
          format: float
          minimum: 0
          description: Precio del producto
          example: 29.99
        stock:
          type: integer
          minimum: 0
          description: Cantidad en inventario
          example: 15
        imagen:
          type: string
          format: uri
          description: URL de la imagen del producto
          example: "https://example.com/images/cartera.jpg"
        categoria:
          type: string
          description: Categoría del producto
          example: "Accesorios"
      required:
        - descripcion
        - precio
        - stock
        - imagen

    Admin:
      type: object
      properties:
        _id:
          type: string
          description: ID único del administrador
          example: "64a1b2c3d4e5f6789abcdef0"
        nombre:
          type: string
          description: Nombre del administrador
          example: "Administrador Principal"
        email:
          type: string
          format: email
          description: Email del administrador
          example: "admin@kiroglam.com"
        rol:
          type: string
          description: Rol del usuario
          example: "admin"
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación
          example: "2025-08-04T12:00:00.000Z"

    Error:
      type: object
      properties:
        error:
          type: string
          description: Mensaje de error
          example: "Error en la operación"
        details:
          type: object
          description: Detalles adicionales del error
        code:
          type: integer
          description: Código de error
          example: 400

tags:
  - name: Autenticación
    description: Endpoints para manejo de autenticación OAuth
  - name: Productos
    description: CRUD completo para gestión de productos
  - name: Administración
    description: Funciones de administración del sistema
  - name: Sistema
    description: Endpoints de utilidad y monitoreo
